{"version":3,"sources":["components/Gallery.js","App.js","reportWebVitals.js","index.js"],"names":["Meta","Card","Gallery","useState","data","setData","page","setPage","initLoading","setInitLoading","loading","setLoading","NasaURL","useEffect","fetch","then","response","json","result","concat","photos","error","console","log","loadMore","style","textAlign","marginTop","height","lineHeight","onClick","title","subTitle","display","justifyContent","alignItems","dataSource","renderItem","photo","index","Item","width","cover","alt","camera","full_name","src","img_src","actions","LikeOutlined","color","like","item","Object","assign","handleLike","name","description","earth_date","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAIQA,EAASC,IAATD,KAEKE,EAAU,WACrB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAO,wFAAoFN,EAApF,qDAEbO,qBAAU,WACRC,MAAMF,GACHG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MACC,SAACG,GACCb,EAAQD,EAAKe,OAAOD,EAAOE,SAC3BT,GAAW,GACXF,GAAe,MAEjB,SAACY,GACCC,QAAQC,IAAIF,QAGjB,CAACT,IAEJ,IAKMY,EACHhB,GAAgBE,EAWb,KAVF,qBACEe,MAAO,CACLC,UAAW,SACXC,UAAW,GACXC,OAAQ,GACRC,WAAY,QALhB,SAQE,cAAC,IAAD,CAAQC,QAfK,WACjBvB,EAAQD,EAAO,GACfK,GAAW,IAaP,4BASN,OACE,gCACE,cAAC,IAAD,CACEoB,MAAM,eACNC,SAAS,uCAGX,qBACEP,MAAO,CACLQ,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAAC,IAAD,CACEC,WAAYhC,EACZM,QAASF,EACTgB,SAAUA,EACVa,WAAY,SAACC,EAAOC,GAAR,OACV,cAAC,IAAKC,KAAN,UACE,cAAC,IAAD,CACEf,MAAO,CAAEgB,MAAO,QAChBC,MAAO,qBAAKC,IAAKL,EAAMM,OAAOC,UAAWC,IAAKR,EAAMS,UACpDC,QAAS,CACP,cAACC,EAAA,EAAD,CAEExB,MAAO,CAAEyB,MAAOZ,EAAMa,KAAO,UAAY,QACzCrB,QAAS,kBAhCR,SAACsB,EAAMb,GAAW,IAAD,EAClCa,EAAKD,OAAO,UAAEC,EAAKD,YAAP,UACZ9C,EAAQgD,OAAOC,OAAO,GAAIlD,EAAlBiD,OAAA,IAAAA,CAAA,GAA2Bd,EAAQa,KA8BZG,CAAWjB,EAAOC,KAF7B,SALV,SAWE,cAACvC,EAAD,CACE+B,MAAOO,EAAMM,OAAOY,KACpBC,YAAanB,EAAMoB,0BCzEtBC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c2505ed0.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { PageHeader, List, Card, Button } from \"antd\";\nimport { LikeOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nexport const Gallery = () => {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [initLoading, setInitLoading] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const NasaURL = `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&page=${page}&api_key=JfjGqw1yOKJZGp2MspTyXJR91g2Q6VvLsC7Pg8ph`;\n\n  useEffect(() => {\n    fetch(NasaURL)\n      .then((response) => response.json())\n      .then(\n        (result) => {\n          setData(data.concat(result.photos));\n          setLoading(false);\n          setInitLoading(false);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, [NasaURL]);\n\n  const onLoadMore = () => {\n    setPage(page + 1);\n    setLoading(true);\n  };\n\n  const loadMore =\n    !initLoading && !loading ? (\n      <div\n        style={{\n          textAlign: \"center\",\n          marginTop: 12,\n          height: 32,\n          lineHeight: \"32px\",\n        }}\n      >\n        <Button onClick={onLoadMore}>loading more</Button>\n      </div>\n    ) : null;\n\n  const handleLike = (item, index) => {\n    item.like = !(item.like ?? false);\n    setData(Object.assign([], data, { [index]: item }));\n  };\n\n  return (\n    <div>\n      <PageHeader\n        title=\"Spacestagram\"\n        subTitle=\"Brought to you by NASA's image API\"\n      />\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <List\n          dataSource={data}\n          loading={initLoading}\n          loadMore={loadMore}\n          renderItem={(photo, index) => (\n            <List.Item>\n              <Card\n                style={{ width: \"80vw\" }}\n                cover={<img alt={photo.camera.full_name} src={photo.img_src} />}\n                actions={[\n                  <LikeOutlined\n                    key=\"like\"\n                    style={{ color: photo.like ? \"#eb2f96\" : \"grey\" }}\n                    onClick={() => handleLike(photo, index)}\n                  />,\n                ]}\n              >\n                <Meta\n                  title={photo.camera.name}\n                  description={photo.earth_date}\n                />\n              </Card>\n            </List.Item>\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport {Gallery} from \"./components/Gallery\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Gallery />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}